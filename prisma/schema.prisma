generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                String @id @default(uuid())
  name              String
  username          String
  email             String
  password          String
  session           String?
  last_seen         Int?
  account_active    Boolean @default(true)

  confirmations     Confirmation[]
  events            Event[]
  event_person      EventPersons[]

  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  @@map("users")
}

model Confirmation {
  id                        String   @id @default(uuid())
  userId                    String
  type                      String?
  description               String?

  confirmation              User    @relation(fields: [userId], references: [id])
  created_at                DateTime @default(now())

  @@map("users_confirmations")
}

model Otp {
  id          String     @id @default(uuid())
  type        String
  code        String
  codeUrl     String
  userId      String
  secret      String
  taskId      String
  status      Boolean     @default(true)
  workStatus  Boolean?    @default(false)
  workId      String?     @default("")
  expireIn    Int

  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt

  @@map("otps")
}

model refresh {
  id          String    @id @default(uuid())
  token       String
  expireIn    Int
  status      Boolean   @default(true)
  userId      String
  session     String

  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@map("refresh_token")
}

model Event {
  id                  String        @id  @default(uuid())
  title               String
  description         String?

  event_user_created  String
  event_date          Int
  event_status        Boolean       @default(true)
  event_location      String
  event_min_person    Int?
  event_max_person    Int?
  
  created_at          DateTime      @default(now())
  updated_at          DateTime      @updatedAt

  userEvent           User          @relation(fields: [event_user_created], references: [id])
  persons             EventPersons[]

  @@map("events")
}

model EventPersons {
  id          String    @id  @default(cuid())
  userId      String
  eventId     String

  created_at  DateTime  @default(now())

  user        User      @relation(fields: [userId], references: [id])
  event       Event     @relation(fields: [eventId], references: [id])

  @@map("event_persons")
}